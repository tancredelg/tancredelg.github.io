---
import type { ExperienceProps } from '../data/experiences'

const { company, positions } = Astro.props as ExperienceProps

// Helper to format date range
function formatDateRange(fromDate: string, toDate?: string): string {
    if (!toDate) return `${fromDate} - Present`
    return `${fromDate} - ${toDate}`
}
---

<div class="experience-card group/card">
    <h3 class="flex gap-2 items-center font-medium text-xl sm:text-3xl lg:text-2xl">
        {
            company.logo &&
                (() => {
                    if (company.logo.type === 'img' && company.logo.value) {
                        // Raster image or imported asset
                        const src =
                            typeof company.logo.value === 'string'
                                ? company.logo.value
                                : company.logo.value.src
                        return <img id="logo" src={src} alt={company.name + ' logo'} />
                    }
                    if (company.logo.type === 'svg' && typeof company.logo.value === 'function') {
                        // Imported SVG as component
                        const LogoComponent = company.logo.value
                        return <LogoComponent id="logo" alt={company.name + ' logo'} />
                    }
                    if (company.logo.type === 'html' && typeof company.logo.value === 'string') {
                        // Raw HTML string
                        return <div id="logo" set:html={company.logo.value} />
                    }
                    return null
                })()
        }
        {company.name}
    </h3>
    <div id="positions">
        {
            positions.map((position, index) => (
                <div class="position-item relative group/position">
                    {index < positions.length - 1 && <div id="timeline-line" aria-hidden="true" />}
                    <div id="timeline-dot" aria-hidden="true" />
                    <div id="content">
                        <div class="flex flex-col sm:flex-row sm:items-center gap-x-2.5 gap-y-0.5">
                            <h4>{position.title}</h4>
                            <span id="period">
                                {formatDateRange(position.fromDate, position.toDate)}
                            </span>
                        </div>
                        <p>{position.description}</p>
                    </div>
                </div>
            ))
        }
    </div>

    <div id="urls">
        {
            company.url ? (
                <a
                    href={company.url}
                    target="_blank"
                    class="flex gap-1 items-center bg-white text-neutral-900"
                >
                    Website
                    <svg
                        class="size-4 sm:size-4.5 lg:size-4"
                        viewBox="0 0 360 360"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path d="M128,63.999444 L128,106.666444 L42.6666667,106.666667 L42.6666667,320 L256,320 L256,234.666444 L298.666,234.666444 L298.666667,362.666667 L4.26325641e-14,362.666667 L4.26325641e-14,64 L128,63.999444 Z M362.666667,1.42108547e-14 L362.666667,170.666667 L320,170.666667 L320,72.835 L143.084945,249.751611 L112.915055,219.581722 L289.83,42.666 L192,42.6666667 L192,1.42108547e-14 L362.666667,1.42108547e-14 Z" />
                    </svg>
                </a>
            ) : (
                <span
                    title="Feel free to contact me for more information"
                    class="p-1 px-2 rounded-lg bg-black/85 text-gray-300/85 text-sm
                    opacity-0 group-hover/card:opacity-100
                    transition-all duration-100 ease-out"
                >
                    No links available, sorry!
                </span>
            )
        }
    </div>
</div>
