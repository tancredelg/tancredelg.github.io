---
import ProjectCard from './ProjectCard.astro'
import ExperienceCard from './ExperienceCard.astro'
import EducationCard from './EducationCard.astro'
import { projects } from '../data/projects'
import { experiences } from '../data/experiences'
import { education } from '../data/education'
---

<div id="tab-container">
    <nav id="tab-nav">
        <div class="tab-slider"></div>
        <button data-tab="projects" class="tab-button">Projects</button>
        <button data-tab="experience" class="tab-button">Experience</button>
        <button data-tab="education" class="tab-button">Education</button>
    </nav>

    <div id="projects" class="tab-panel group/tab">
        {projects.map((project) => <ProjectCard {...project} />)}
    </div>

    <div id="experience" class="tab-panel group/tab">
        {experiences.map((exp) => <ExperienceCard {...exp} />)}
    </div>

    <div id="education" class="tab-panel group/tab">
        {education.map((edu) => <EducationCard {...edu} />)}
    </div>
</div>

<script>
    // Get all the buttons and panels
    const tabContainer = document.querySelector('#tab-container')
    const tabButtons = tabContainer.querySelectorAll('.tab-button')
    const tabPanels = tabContainer.querySelectorAll('.tab-panel')
    const tabSlider = tabContainer.querySelector('.tab-slider')

    // Function to set the active tab and animate the slider
    function setActiveTab(tabName) {
        let activeButton = null
        tabButtons.forEach((button) => {
            if (button.dataset.tab === tabName) {
                button.classList.add('active')
                activeButton = button
            } else {
                button.classList.remove('active')
            }
        })

        // Hide all panels, then show the correct one
        tabPanels.forEach((panel) => {
            if (panel.id === tabName) {
                panel.classList.remove('hidden')
                panel.classList.add('flex')
            } else {
                panel.classList.add('hidden')
                panel.classList.remove('flex')
            }
        })

        // Animate the tab-slider to the active button
        if (activeButton && tabSlider) {
            const nav = activeButton.parentElement
            const navRect = nav.getBoundingClientRect()
            const btnRect = activeButton.getBoundingClientRect()
            // Calculate left relative to nav
            const left = btnRect.left - navRect.left
            tabSlider.style.left = left + 'px'
            // Adjust top position to account for nav's padding
            const navStyles = window.getComputedStyle(nav)
            // const navPaddingTop = parseFloat(navStyles.paddingTop) || 0;
            tabSlider.style.top = (parseFloat(navStyles.paddingTop) || 0) + 'px'
            tabSlider.style.width = btnRect.width + 'px'
            tabSlider.style.height = btnRect.height + 'px'
        }
    }

    // Add click event listeners to each button
    tabButtons.forEach((button) => {
        button.addEventListener('click', () => {
            setActiveTab(button.dataset.tab)
        })
    })

    // Set the first tab as active by default on page load
    setActiveTab('projects')

    // Reposition slider on window resize
    window.addEventListener('resize', () => {
        const active = tabContainer.querySelector('.tab-button.active')
        if (active) setActiveTab(active.dataset.tab)
    })
</script>
